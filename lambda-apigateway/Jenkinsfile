pipeline{
    agent{
        label "master"
    }
    stages{
        stage("checkout"){
            steps{
                git url:'https://github.com/AndyJCheng/lambda-apigateway.git'
            }
        }
        stage("sonarqube"){
            steps{
                echo 'run sonarqube'
            }

        }
        stage("unittest"){
            steps{
                  sh 'pytest --html=index.html'
                    publishHTML(
                      [allowMissing: false, 
                      alwaysLinkToLastBuild: false, 
                      keepAll: false, 
                      reportDir: '', 
                      reportFiles: 'index.html', 
                      reportName: 'HTML Report', 
                      reportTitles: 'Report'])
                
               }
                
            }
           
        stage("package"){
            steps{
                script{
                    name = sh(script: 'awk \'NR==2 {print $2}\' *test.py', returnStdout: true).trim()
                    // handler = sh(script: 'awk \'NR==2 {print $2}\' test/*test.py', returnStdout: true).trim()
                    sh "zip -r ${name}.zip ${name}.py"
                }
                
            }
        }
        stage("lambda"){
            steps{
                dir('/root/lambda-apigateway/lambda'){
                    script{
                    name = sh(script: 'awk \'NR==2 {print $2}\' ${WORKSPACE}/*test.py', returnStdout: true).trim()
                    handler = sh(script: 'awk \'NR==2 {print $2}\' ${WORKSPACE}/*test.py', returnStdout: true).trim()                  
                }
                    sh "cp -rf ${WORKSPACE}/${name}.zip ."
                    sh 'terraform init'
                    sh ". /etc/profile; echo yes | terraform apply -var lambda_name=${name} -var handler_name=${handler} -lock=false"
                }
                
            }

        }
        stage("api-gateway"){
            steps{
                dir('/root/lambda-apigateway/api-gateway'){
                    script{
                        name = sh(script: 'awk \'NR==2 {print $2}\'  ${WORKSPACE}/*test.py', returnStdout: true).trim()
                    }
                    sh "cp -rf ${WORKSPACE}/*.yaml ."
                    sh 'terraform init'
                    sh ". /etc/profile; echo yes | terraform apply -var lambda_name=${name} -lock=false"
                }               
            }
        }
    }
    post{
        always{
            echo "========clean workspace========"
            // cleanWs()
        }
    }
}